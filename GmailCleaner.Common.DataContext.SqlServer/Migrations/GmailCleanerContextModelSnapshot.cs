// <auto-generated />
using System;
using GmailCleaner.Common;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GmailCleaner.Common.DataContext.SqlServer.Migrations
{
    [DbContext(typeof(GmailCleanerContext))]
    partial class GmailCleanerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GmailCleaner.Common.Models.GCUser", b =>
                {
                    b.Property<int>("GmailId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("GmailId")
                        .HasName("PK__Users__EAD496F534ED7B23");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GmailCleaner.Common.Models.UserTokens", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AccessToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpiresAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("GmailId")
                        .HasColumnType("int");

                    b.Property<string>("IdToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GmailId");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("GmailCleaner.Common.Models.UserTokens", b =>
                {
                    b.HasOne("GmailCleaner.Common.Models.GCUser", "GCUser")
                        .WithMany("UserTokens")
                        .HasForeignKey("GmailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GCUser");
                });

            modelBuilder.Entity("GmailCleaner.Common.Models.GCUser", b =>
                {
                    b.Navigation("UserTokens");
                });
#pragma warning restore 612, 618
        }
    }
}
